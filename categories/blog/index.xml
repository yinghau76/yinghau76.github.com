<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Simply Patrick</title>
    <link>https://blog.simplypatrick.com/categories/blog/</link>
    <description>Recent content in blog on Simply Patrick</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Sep 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.simplypatrick.com/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terminal syntax highlight</title>
      <link>https://blog.simplypatrick.com/posts/2012/09-16-terminal-syntax-highlight/</link>
      <pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.simplypatrick.com/posts/2012/09-16-terminal-syntax-highlight/</guid>
      <description>由於會需要在 blog 裡分享命令列指令，所以模仿其他的 CodeRay plug-in 寫了一個新的來高亮命令行。
在 Octopress 的目錄裡只需要新增一個 plugins/coderay_term.rb:
require &amp;#39;coderay&amp;#39; module CodeRay module Scanners # Scanner for terminal commands class Term &amp;lt; Scanner register_for :term protected def scan_tokens encoder, options state = :initial until eos? case state when :initial if match = scan(/^\s*\$/) encoder.text_token match, :directive state = :command_found elsif match = scan(/.*[\n$]/) encoder.text_token match, :comment end when :command_found if match = scan(/.*[\n$]/) encoder.text_token match, :function state = :initial end end end encoder end end end end </description>
    </item>
    
    <item>
      <title>Importing wordpress.com Blog</title>
      <link>https://blog.simplypatrick.com/posts/2011/10-09-importing-wordpress-dot-com-blog/</link>
      <pubDate>Sun, 09 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://blog.simplypatrick.com/posts/2011/10-09-importing-wordpress-dot-com-blog/</guid>
      <description>今晚試著照 Jekyll 網站教的方法把 wordpress.com 的資料轉過來，遇到了一些問題，主要是 yaml 無法正確處理 UTF-8 資料以及原始檔名有包含 % 時會有重複 escape 的問題。花了一點功夫試出了解決方式如下：
修改 wordpressdotcom.rb:
--- a/source/_import/wordpressdotcom.rb +++ b/source/_import/wordpressdotcom.rb @@ -3,6 +3,7 @@ require &amp;#39;rubygems&amp;#39; require &amp;#39;hpricot&amp;#39; require &amp;#39;fileutils&amp;#39; +require &amp;#39;ya2yaml&amp;#39; require &amp;#39;yaml&amp;#39; require &amp;#39;time&amp;#39; @@ -16,7 +17,7 @@ module Jekyll  (doc/:channel/:item).each do |item| title = item.at(:title).inner_text.strip - permalink_title = item.at(&amp;#39;wp:post_name&amp;#39;).inner_text + permalink_title = item.at(&amp;#39;wp:post_name&amp;#39;).inner_text.delete(&amp;#39;%&amp;#39;)  # Fallback to &amp;#34;prettified&amp;#34; title if post_name is empty (can happen) if permalink_title == &amp;#34;&amp;#34; permalink_title = title.</description>
    </item>
    
    <item>
      <title>Hello Octopress!</title>
      <link>https://blog.simplypatrick.com/posts/2011/10-08-hello-octopress/</link>
      <pubDate>Sat, 08 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://blog.simplypatrick.com/posts/2011/10-08-hello-octopress/</guid>
      <description>看了 XDite 的介紹，由於 Rails 大概懂一點，前陣子也是有小玩過 Heroku，所以也仿效他把 blog 系統換成 Octopress 了。
由於預設 theme 的字型感覺有點太大，所以就試著調了一下，也小改了標題的字型：
body { font-size: 70%; } body &amp;gt; header h1 a, body &amp;gt; header h1 a:visited, body &amp;gt; header h1 a:hover { font-family: &amp;#34;Julee&amp;#34;; } body &amp;gt; header h2 { font-family: &amp;#34;Just Me Again Down Here&amp;#34;; font-size: 1.5em; } 幾點感想：
 Markdown 語法還蠻直覺的，只是之前用 Redmine 學了 Texttile 語法，後來寫技術文檔用 reStruturedText 格式，都很像但又有些不一樣，寫的時候要把腦袋調到正確的模式有點累。 Webfonts 真是個好東西，用起來很簡單，又可以很簡單地把網頁弄的有質感。 CSS 本來就不是很好搞，在加上 Sass 又變更複雜，真是要花時間才能學好。  </description>
    </item>
    
  </channel>
</rss>
